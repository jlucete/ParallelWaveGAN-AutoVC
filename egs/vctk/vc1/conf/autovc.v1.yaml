# This is the hyperparameter configuration file for MelGAN.
# Please make sure this is adjusted for the VCTK dataset. If you want to
# apply to the other dataset, you might need to carefully change some parameters.
# This configuration requires ~ 6GB memory and will finish within 3 days on Titan V.

# This configuration is based on multi-band MelGAN but the hop size and sampling
# rate is different from the paper (16kHz vs 24kHz). The number of iteraions
# is now shown in the paper so currently we train 1M iterations (not sure enough
# to converge). Compared to multi_band_melgan.v1 config, Adam optimizer without
# gradient norm is used, which is based on @dathudeptrai advice.
# https://github.com/kan-bayashi/ParallelWaveGAN/issues/143#issuecomment-632539906

# We found that the use of small batch_max_steps has no bad effect for the quality,
# so we use 8,100 for batch_max_steps to accelerate the training.

###########################################################
#                FEATURE EXTRACTION SETTING               #
###########################################################
sampling_rate: 22050     # Sampling rate.
fft_size: 1024           # FFT size.
hop_size: 256            # Hop size.
win_length: 1024         # Window length.
                         # If set to null, it will be the same as fft_size.
window: "hann"           # Window function.
num_mels: 80             # Number of mel basis.
fmin: 55                 # Minimum freq in mel basis calculation.
fmax: 7600               # Maximum frequency in mel basis calculation.
global_gain_scale: 1.0   # Will be multiplied to all of waveform.
trim_silence: false      # Whether to trim the start and end of silence.
trim_threshold_in_db: 23 # Need to tune carefully if the recording is not good.
trim_frame_size: 1024    # Frame size in trimming.
trim_hop_size: 256       # Hop size in trimming.
format: "npy"           # Feature file format. "npy" or "hdf5" is supported.

spk_emb_dim: 256
spk_emb_type: "onehot"

###########################################################
#         GENERATOR NETWORK ARCHITECTURE SETTING          #
###########################################################
generator_type: "AutoVCGenerator" # Generator type.
autovc_generator_params:
    dim_emb: 256
    dim_neck: 16
    freq: 16
    dim_pre: 512

###########################################################
#               CODE SEMANTIC LOSS SETTING                #
###########################################################
lambda_cd: 1.0            # Loss balancing coefficient for code semantic loss

###########################################################
#                  DATA LOADER SETTING                    #
###########################################################
len_crop: 128
batch_size: 8             # Batch size.
batch_max_steps: 8100      # Length of each audio in batch. Make sure dividable by hop_size.
pin_memory: true           # Whether to pin memory in Pytorch DataLoader.
num_workers: 4             # Number of workers in Pytorch DataLoader.
remove_short_samples: true # Whether to remove samples the length of which are less than batch_max_steps.
allow_cache: true          # Whether to allow cache in dataset. If true, it requires cpu memory.

###########################################################
#             OPTIMIZER & SCHEDULER SETTING               #
###########################################################
generator_optimizer_type: "Adam"       # Generator's optimizer type.
generator_optimizer_params:
    lr: 1.0e-4                          # Generator's learning rate.
    eps: 1.0e-5                         # Generator's epsilon.
    weight_decay: 0.0                   # Generator's weight decay coefficient.

generator_grad_norm: -1                 # Generator's gradient norm.
generator_scheduler_type: "MultiStepLR" # Generator's scheduler type.
generator_scheduler_params:
    gamma: 0.5                          # Generator's scheduler gamma.
    milestones:                         # At each milestone, lr will be multiplied by gamma.
        - 100000
        - 200000
        - 300000
        - 400000
        - 500000
        - 600000

###########################################################
#                    INTERVAL SETTING                     #
###########################################################
train_max_steps: 1000000                # Number of training steps.
save_interval_steps: 1000              # Interval steps to save checkpoint.
eval_interval_steps: 1000               # Interval steps to evaluate the network.
log_interval_steps: 100                # Interval steps to record the training log.

###########################################################
#                     OTHER SETTING                       #
###########################################################
#num_save_intermediate_results: 4  # Number of results to be saved as intermediate results.
